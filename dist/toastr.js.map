{"version":3,"sources":["toastr.js"],"names":["_classCallCheck","instance","Constructor","TypeError","_createClass","defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","key","protoProps","staticProps","prototype","toastr","options","this","container","listener","toastId","previousToast","undefined","toastType","error","info","success","warning","defaultOptions","tapToDismiss","toastClass","containerId","debug","showMethod","showDuration","showEasing","onShown","hideMethod","hideDuration","hideEasing","onHidden","extendedTimeOut","iconClasses","iconClass","positionClass","timeOut","titleClass","messageClass","closeHtml","newestOnTop","preventDuplicates","progressBar","value","assign","createContainer","opt","getOptions","document","getElementById","element","offsetWidth","offsetHeight","message","title","optionsOverride","notify","type","callback","toastElement","clearOptions","getContainer","clearToast","clearContainer","matches","removeToast","hasChildNodes","remove","numToastsToClear","children","item","forceToastClosure","force","isElementVisible","parentNode","removeChild","timeoutId","clearTimeout","childNodes","createElement","classList","add","setAttribute","querySelector","appendChild","args","map","_this","titleElement","messageElement","iconElement","progressElement","closeElement","innerHTML","intervalId","hideEta","maxHideTime","response","state","startTime","Date","shouldExit","mapping","call","setSequence","localContainer","firstNode","firstChild","insertBefore","setTitle","localTitle","setMessage","localMessage","console","log","mapMessage","setIcon","localIconClass","innerContent","setCloseButton","localCloseElement","setProgressBar","personalizeToast","animateToastIn","localToastElement","animationFinishedCallback","animateInPlayer","animate","opacity","duration","iterations","delay","onfinish","animateToastOut","hideToast","override","clearInterval","updateProgress","progress","getTime","percentage","style","width","displayToast","setTimeout","parseFloat","setInterval","delayedHideToast","stickAround","handleEvents","addEventListener","onclick","closeButton","event","stopPropagation","cancelBubble","publish","window"],"mappings":"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","file":"toastr.js","sourcesContent":["/*\r\n * Toastr\r\n * Copyright 2012-2016\r\n * Authors: John Papa,  Tim Ferrell and Stephen Bero.\r\n * All Rights Reserved.\r\n * Use, reproduction, distribution, and modification of this code is subject to the terms and\r\n * conditions of the MIT license, available at http://www.opensource.org/licenses/mit-license.php\r\n *\r\n * ARIA Support: Greta Krafsig\r\n *\r\n * Project: https://github.com/CodeSeven/toastr\r\n */\r\n\r\n/* jshint -W040 */\r\nclass toastr {\r\n\r\n  constructor(options) {\r\n    this.container = null;\r\n    this.listener = null;\r\n    this.toastId = 0;\r\n    this.previousToast = undefined;\r\n    this.options = options;\r\n\r\n    this.toastType = {\r\n      error: 'error',\r\n      info: 'info',\r\n      success: 'success',\r\n      warning: 'warning',\r\n    };\r\n\r\n    this.defaultOptions = {\r\n      tapToDismiss: true,\r\n      toastClass: 'toast',\r\n      containerId: 'toast-container',\r\n      debug: false,\r\n\r\n      showMethod: 'fadeIn', // fadeIn, slideDown, and show are built into jQuery\r\n      showDuration: 300,\r\n      showEasing: 'swing', // swing and linear are built into jQuery\r\n      onShown: undefined,\r\n      hideMethod: 'fadeOut',\r\n      hideDuration: 1000,\r\n      hideEasing: 'swing',\r\n      onHidden: undefined,\r\n\r\n      extendedTimeOut: 1000,\r\n      iconClasses: {\r\n        error: 'toast-error',\r\n        info: 'toast-info',\r\n        success: 'toast-success',\r\n        warning: 'toast-warning',\r\n      },\r\n      iconClass: 'toast-info',\r\n      positionClass: 'toast-top-right',\r\n      timeOut: 1000, // Set timeOut and extendedTimeOut to 0 to make it sticky\r\n      titleClass: 'toast-title',\r\n      messageClass: 'toast-message',\r\n      target: 'body',\r\n      closeHtml: 'CLOSE',\r\n      newestOnTop: true,\r\n      preventDuplicates: false,\r\n      progressBar: false,\r\n    };\r\n\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * Gets the current options for toastr.\r\n   * Includes defaults where not overriden.\r\n   * @private\r\n   * @returns {Object}\r\n   */\r\n  getOptions() {\r\n    return Object.assign(this.defaultOptions, this.options);\r\n  }\r\n\r\n  /**\r\n   * Retrieves the container element.\r\n   * @param options\r\n   * @param {boolean} createContainer Create a container if one does not already exist.\r\n   * @returns {Element}\r\n   */\r\n  getContainer(options, createContainer) {\r\n    let opt = options;\r\n\r\n    if (typeof (options) === 'undefined') {\r\n      opt = this.getOptions();\r\n    }\r\n\r\n    this.container = document.getElementById(opt.containerId);\r\n\r\n    if (this.container !== null) {\r\n      return this.container;\r\n    }\r\n\r\n    if (createContainer) {\r\n      this.container = this.createContainer(opt);\r\n    }\r\n\r\n    return this.container;\r\n  }\r\n\r\n  /**\r\n   * Checks if the provided element is visible on screen.\r\n   * @private\r\n   * @param element\r\n   * @returns {boolean}\r\n   */\r\n  isElementVisible(element) { // eslint-disable-line class-methods-use-this\r\n    return element.offsetWidth > 0 && element.offsetHeight > 0; // TODO this doesn't work\r\n  }\r\n\r\n\r\n  /**\r\n   * Creates a toast with the 'error' styling.\r\n   * @param message {string}\r\n   * @param title {string}\r\n   * @param optionsOverride {object}\r\n   */\r\n  error(message, title, optionsOverride) {\r\n    return this.notify({\r\n      type: this.toastType.error,\r\n      iconClass: this.getOptions().iconClasses.error,\r\n      message,\r\n      optionsOverride,\r\n      title,\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Creates a toast with the 'info' styling.\r\n   * @param message {string}\r\n   * @param title {string}\r\n   * @param optionsOverride {object}\r\n   */\r\n  info(message, title, optionsOverride) {\r\n    return this.notify({\r\n      type: this.toastType.info,\r\n      iconClass: this.getOptions().iconClasses.info,\r\n      message,\r\n      optionsOverride,\r\n      title,\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Creates a toast with the 'success' styling.\r\n   * @param message {string}\r\n   * @param title {string}\r\n   * @param optionsOverride {object}\r\n   */\r\n  success(message, title, optionsOverride) {\r\n    return this.notify({\r\n      type: this.toastType.success,\r\n      iconClass: this.getOptions().iconClasses.success,\r\n      message,\r\n      optionsOverride,\r\n      title,\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Creates a toast with the 'warning' styling.\r\n   * @param message {string}\r\n   * @param title {string}\r\n   * @param optionsOverride {object}\r\n   */\r\n  warning(message, title, optionsOverride) {\r\n    return this.notify({\r\n      type: this.toastType.warning,\r\n      iconClass: this.getOptions().iconClasses.warning,\r\n      message,\r\n      optionsOverride,\r\n      title,\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Adds a listener to when a toast is shown.\r\n   * @param callback\r\n   */\r\n  subscribe(callback) {\r\n    this.listener = callback;\r\n  }\r\n\r\n  /**\r\n   * Clears the provided toast element from the screen, executing animations.\r\n   * @param {Element} toastElement\r\n   * @param clearOptions\r\n   */\r\n  clear(toastElement, clearOptions) {\r\n    const options = this.getOptions();\r\n\r\n    if (this.container === null) {\r\n      this.getContainer(options, false);\r\n    }\r\n\r\n    if (!this.clearToast(toastElement, options, clearOptions)) {\r\n      this.clearContainer(options);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Removes a toast from the screen, without executing animations.\r\n   * Good to go for v3.\r\n   * @param {Element} toastElement The toast to be removed.\r\n   */\r\n  remove(toastElement) {\r\n    const options = this.getOptions();\r\n\r\n    if (typeof (this.container) === 'undefined') {\r\n      this.getContainer(options, false);\r\n    }\r\n\r\n    if (typeof (toastElement) === 'undefined' && toastElement.matches(':focus')) {\r\n      this.removeToast(toastElement);\r\n      return;\r\n    }\r\n\r\n    if (!this.container.hasChildNodes()) {\r\n      this.container.remove();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Clears all toasts from the container.\r\n   * @param options\r\n   */\r\n  clearContainer(options) {\r\n    if (this.container) {\r\n      const numToastsToClear = this.container.children.length;\r\n\r\n      for (let i = numToastsToClear - 1; i >= 0; i -= 1) {\r\n        const item = this.container.children[i];\r\n        this.clearToast(item, options);\r\n      }\r\n\r\n      // this.container.childNodes.forEach(item => this.clearToast(item, options, false));\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Clears a toast.\r\n   * @private\r\n   * @param toastElement\r\n   * @param options\r\n   * @param clearOptions\r\n   * @returns {boolean}\r\n   */\r\n  clearToast(toastElement, options, clearOptions) {\r\n    if (typeof (toastElement) !== 'undefined') {\r\n      const forceToastClosure = clearOptions && clearOptions.force ? clearOptions.force : false;\r\n\r\n      if (forceToastClosure || !toastElement.matches(':focus')) {\r\n        this.removeToast(toastElement);\r\n\r\n        // TODO: Show exit animation and do callback etc\r\n        return true;\r\n      }\r\n    }\r\n\r\n    return false;\r\n  }\r\n\r\n  /**\r\n   * Removes a toast from the screen.\r\n   * @param toastElement\r\n   */\r\n  removeToast(toastElement) {\r\n    if (typeof (this.container) === 'undefined') {\r\n      this.container = this.getContainer();\r\n    }\r\n\r\n    if (this.isElementVisible(toastElement)) return;\r\n\r\n    // Use the element to get its parent so we can remove it.\r\n    toastElement.parentNode.removeChild(toastElement);\r\n\r\n    if (toastElement.timeoutId !== null) {\r\n      clearTimeout(toastElement.timeoutId);\r\n    }\r\n\r\n    toastElement = null; // eslint-disable-line no-param-reassign\r\n\r\n    if (this.container.childNodes.length === 0 && this.container.parentNode) {\r\n      this.container.parentNode.removeChild(this.container);\r\n      this.previousToast = undefined;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Creates the toastr container.\r\n   * @private\r\n   * @param options\r\n   * @returns {Element}\r\n   * @see Updated for v3.\r\n   */\r\n  createContainer(options) {\r\n    const container = document.createElement('div');\r\n    container.classList.add(options.positionClass);\r\n    container.setAttribute('id', options.containerId);\r\n    container.setAttribute('aria-live', 'polite');\r\n    container.setAttribute('role', 'alert');\r\n\r\n    this.container = container;\r\n\r\n    document.querySelector(options.target).appendChild(this.container);\r\n\r\n    return this.container;\r\n  }\r\n\r\n  /**\r\n   * Broadcast toast notification to the listener object.\r\n   * @param {object} args Arguments to provide to the listener callback.\r\n   */\r\n  publish(args) {\r\n    if (typeof (this.listener) === 'undefined' || this.listener === null) {\r\n      return;\r\n    }\r\n\r\n    this.listener(args);\r\n  }\r\n\r\n  /**\r\n   * Core method for generating toasts.\r\n   * @param map\r\n   * @returns {Element}\r\n   */\r\n  notify(map) {\r\n    let options = this.getOptions();\r\n    let iconClass = map.iconClass || options.iconClass;\r\n\r\n    if (typeof (map.optionsOverride) !== 'undefined') {\r\n      options = Object.assign(options, map.optionsOverride);\r\n      iconClass = map.optionsOverride.iconClass || iconClass;\r\n    }\r\n\r\n    this.toastId += 1;\r\n\r\n    const container = this.getContainer(options, true);\r\n    const titleElement = document.createElement('div');\r\n    const messageElement = document.createElement('div');\r\n    const iconElement = document.createElement('div');\r\n    const progressElement = document.createElement('div');\r\n    const closeElement = document.createElement('div');\r\n    closeElement.innerHTML = options.closeHtml;\r\n    const message = map.message;\r\n    const title = map.title;\r\n\r\n    const progressBar = {\r\n      intervalId: null,\r\n      hideEta: null,\r\n      maxHideTime: null,\r\n    };\r\n\r\n    const response = {\r\n      toastId: this.toastId,\r\n      state: 'visible',\r\n      startTime: new Date(),\r\n      options,\r\n      map,\r\n    };\r\n\r\n    let timeoutId = null;\r\n    let toastElement = document.createElement('div');\r\n    toastElement.classList.add(iconClass);\r\n\r\n    const shouldExit = (opt, mapping) => {\r\n      if (options.preventDuplicates) {\r\n        // if (typeof(this) !== 'undefined') {\r\n\r\n        if (mapping.message === this.previousToast) {\r\n          return true;\r\n        }\r\n\r\n        this.previousToast = map.message; // TODO: JSHint Possible String Violation\r\n      }\r\n\r\n      return false;\r\n    };\r\n\r\n    if (shouldExit.call(this, options, map)) {\r\n      return null;\r\n    }\r\n\r\n    const setSequence = () => {\r\n      const localContainer = this.getContainer();\r\n\r\n      if (options.newestOnTop) {\r\n        const firstNode = localContainer.firstChild;\r\n        localContainer.insertBefore(toastElement, firstNode);\r\n\r\n        // console.log(this.container);\r\n        // TODO: Not yet supported in v3\r\n      } else {\r\n        localContainer.appendChild(toastElement); // TODO: JSHint Possible String Violation\r\n      }\r\n\r\n      this.container = localContainer;\r\n    };\r\n\r\n    /**\r\n     * Good to go for v3.\r\n     */\r\n    const setTitle = (localTitle) => {\r\n      if (typeof (localTitle) !== 'undefined') {\r\n        titleElement.innerHTML = localTitle;\r\n        titleElement.classList.add(options.titleClass);\r\n        toastElement.appendChild(titleElement);\r\n      }\r\n    };\r\n\r\n    /**\r\n     * Good to go for v3.\r\n     */\r\n    const setMessage = (localMessage) => {\r\n      console.log('message recv as', localMessage);\r\n\r\n      if (typeof (message) !== 'undefined') {\r\n        const mapMessage = document.createElement('div');\r\n        mapMessage.innerHTML = message;\r\n\r\n        messageElement.appendChild(mapMessage);\r\n        messageElement.classList.add(options.messageClass);\r\n\r\n        toastElement.appendChild(messageElement);\r\n      }\r\n    };\r\n\r\n    /**\r\n     * Adds a class to set the icon for the toast.\r\n     * Good to go for v3.\r\n     */\r\n    const setIcon = (localIconClass) => {\r\n      if (typeof (options.iconClass) !== 'undefined') {\r\n        iconElement.classList.add('toast-icon');\r\n\r\n        let innerContent = '';\r\n\r\n        switch (localIconClass) {\r\n          case 'toast-info':\r\n            innerContent = '<i class=\"fa fa-info-circle\"></i>';\r\n            break;\r\n          case 'toast-warn':\r\n            innerContent = '<i class=\"fa fa-exclamation-triangle\"></i>';\r\n            break;\r\n          case 'toast-error':\r\n            innerContent = '<i class=\"fa fa-exclamation-circle\"></i>';\r\n            break;\r\n          case 'toast-success':\r\n            innerContent = '<i class=\"fa fa-check\"></i>';\r\n            break;\r\n          default:\r\n            break;\r\n        }\r\n\r\n        iconElement.innerHTML = innerContent;\r\n        toastElement.appendChild(iconElement);\r\n        toastElement.classList.add(options.toastClass);\r\n      }\r\n    };\r\n\r\n    const setCloseButton = (localCloseElement) => {\r\n      console.log(localCloseElement);\r\n\r\n      if (typeof (localCloseElement) !== 'undefined') {\r\n        localCloseElement.classList.add('toast-close-button');\r\n        localCloseElement.setAttribute('role', 'button');\r\n        localCloseElement.setAttribute('type', 'button');\r\n        toastElement.appendChild(localCloseElement);\r\n      }\r\n    };\r\n\r\n    const setProgressBar = () => {\r\n      if (typeof (options.progressBar) !== 'undefined' && options.progressBar) {\r\n        progressElement.classList.add('toast-progress');\r\n        toastElement.appendChild(progressElement);\r\n      }\r\n    };\r\n\r\n    const personalizeToast = () => {\r\n      setIcon(iconClass);\r\n      setTitle(title);\r\n      setMessage(message);\r\n      setCloseButton(closeElement);\r\n      setProgressBar();\r\n    };\r\n\r\n    /**\r\n     * Defines the animation for animating toasts onto the document.\r\n     * @param {Element} toastElement The element to be animated in.\r\n     * @param {Function} animationFinishedCallback Executed when the animation is completed.\r\n     */\r\n    const animateToastIn = (localToastElement, animationFinishedCallback) => {\r\n      const animateInPlayer = localToastElement.animate([\r\n        { opacity: 0 },\r\n        { opacity: 1 },\r\n      ], {\r\n        duration: options.showDuration,\r\n        iterations: 1,\r\n        delay: 0,\r\n      });\r\n\r\n      animateInPlayer.onfinish = animationFinishedCallback;\r\n    };\r\n\r\n    /**\r\n     * Defines the animation for animating toasts off of the document.\r\n     * @param {Element} toastElement The element to be animated out.\r\n     * @param {Function} animationFinishedCallback Executed when the animation is completed.\r\n     */\r\n    const animateToastOut = (localToastElement, animationFinishedCallback) => {\r\n      const animateInPlayer = localToastElement.animate([\r\n        { opacity: 1 },\r\n        { opacity: 0 },\r\n      ], {\r\n        duration: options.hideDuration,\r\n        iterations: 1,\r\n        delay: 0,\r\n      });\r\n\r\n      animateInPlayer.onfinish = animationFinishedCallback;\r\n    };\r\n\r\n    const hideToast = (override) => {\r\n      if (toastElement === null) return;\r\n      if (toastElement.matches(':focus') && !override) return;\r\n\r\n      clearInterval(progressBar.intervalId);\r\n\r\n      console.log('Hiding toast now.', toastElement);\r\n\r\n      // const removeFunction = this.removeToast; // TODO: JSHint Possible String Violation\r\n\r\n      if (typeof (options.onHidden) === 'function') {\r\n        options.onHidden();\r\n      }\r\n\r\n      const animationFinishedCallback = (args) => {\r\n        console.log('Toast is now hiding.', args);\r\n\r\n        if (toastElement === null) return;\r\n\r\n        const parentNode = toastElement.parentNode;\r\n\r\n        // Repeating myself. Try to find a way to not duplicate code.\r\n        // Use the element to get it's parent so we can remove it.\r\n        if (parentNode !== null) {\r\n          parentNode.removeChild(toastElement);\r\n\r\n          if (!parentNode.hasChildNodes()) {\r\n            container.parentNode.removeChild(container);\r\n            this.previousToast = undefined;\r\n          }\r\n        }\r\n\r\n        toastElement = null;\r\n      };\r\n\r\n      animateToastOut(toastElement, animationFinishedCallback);\r\n    };\r\n\r\n    const updateProgress = () => {\r\n      const progress = progressBar.hideEta - new Date().getTime();\r\n      const percentage = (progress / progressBar.maxHideTime) * 100;\r\n      progressElement.style.width = `${percentage}%`;\r\n    };\r\n\r\n    /**\r\n     * Pushes the current toast out for display.\r\n     */\r\n    const displayToast = () => {\r\n      console.log('Appending toast to container.', toastElement);\r\n\r\n      // container.appendChild(toastElement);\r\n      setSequence.call(this);\r\n\r\n      if (typeof (options.onShown) === 'function') {\r\n        options.onShown();\r\n      }\r\n\r\n      const animationFinishedCallback = (args) => {\r\n        console.log('Toast animation in completed.', args);\r\n\r\n        if (options.timeOut > 0) {\r\n          timeoutId = setTimeout(hideToast, options.timeOut);\r\n          progressBar.maxHideTime = parseFloat(options.timeOut);\r\n          progressBar.hideEta = new Date().getTime() + progressBar.maxHideTime;\r\n          if (options.progressBar) {\r\n            progressBar.intervalId = setInterval(updateProgress, 10);\r\n          }\r\n        }\r\n      };\r\n\r\n      animateToastIn(toastElement, animationFinishedCallback);\r\n    };\r\n\r\n    const delayedHideToast = () => {\r\n      if (options.timeOut > 0 || options.extendedTimeOut > 0) {\r\n        timeoutId = setTimeout(hideToast, options.extendedTimeOut);\r\n        progressBar.maxHideTime = parseFloat(options.extendedTimeOut);\r\n        progressBar.hideEta = new Date().getTime() + progressBar.maxHideTime;\r\n      }\r\n    };\r\n\r\n    const stickAround = () => {\r\n      clearTimeout(timeoutId);\r\n      progressBar.hideEta = 0;\r\n\r\n      // toastElement.stop(true, true)[options.showMethod]( // TODO Remove jQuery\r\n      // {duration: options.showDuration, easing: options.showEasing}\r\n      // );\r\n    };\r\n\r\n    const handleEvents = () => {\r\n      toastElement.addEventListener('mouseover', stickAround);\r\n      toastElement.addEventListener('mouseout', delayedHideToast);\r\n\r\n      if (!options.onclick && options.tapToDismiss) {\r\n        toastElement.addEventListener('click', hideToast);\r\n      }\r\n\r\n      if (options.closeButton && closeElement) {\r\n        closeElement.addEventListener('click', (event) => {\r\n          if (event.stopPropagation) {\r\n            event.stopPropagation();\r\n          } else if (event.cancelBubble !== undefined && event.cancelBubble !== true) {\r\n            event.cancelBubble = true; // eslint-disable-line no-param-reassign\r\n          }\r\n\r\n          hideToast(true);\r\n        });\r\n      }\r\n\r\n      if (options.onclick) {\r\n        toastElement.addEventListener('click', () => {\r\n          options.onclick(); // TODO remove jQuery\r\n          hideToast();\r\n        });\r\n      }\r\n    };\r\n\r\n    personalizeToast.call(this);\r\n\r\n    displayToast.call(this);\r\n\r\n    handleEvents();\r\n\r\n    this.publish(response);\r\n\r\n    if (options.debug && console) {\r\n      console.log(response);\r\n    }\r\n\r\n    return toastElement;\r\n  }\r\n}\r\n\r\n// This makes toastr an export for closure's sake\r\nif (typeof (window) !== 'undefined') {\r\n  window.toastr = toastr;\r\n}\r\n"],"sourceRoot":"/source/"}