{"version":3,"sources":["toastr.js"],"names":["_classCallCheck","instance","Constructor","TypeError","_createClass","defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","key","protoProps","staticProps","prototype","toastr","options","this","container","listener","toastId","toastType","error","info","success","warning","previousToast","undefined","value","createContainer","getOptions","document","getElementById","containerId","message","title","optionsOverride","notify","type","iconClass","iconClasses","callback","toastElement","clearOptions","getContainer","clearToast","clearContainer","matches","removeToast","hasChildNodes","remove","numToastsToClear","children","item","forceToastClosure","force","isElementVisible","parentNode","removeChild","childNodes","createElement","classList","add","positionClass","setAttribute","querySelector","appendChild","tapToDismiss","toastClass","debug","showMethod","showDuration","showEasing","onShown","hideMethod","hideDuration","hideEasing","onHidden","extendedTimeOut","timeOut","titleClass","messageClass","closeHtml","newestOnTop","preventDuplicates","progressBar","args","map","personalizeToast","setIcon","setTitle","setMessage","setCloseButton","closeElement","setProgressBar","handleEvents","addEventListener","stickAround","delayedHideToast","onclick","click","hideToast","closeButton","event","stopPropagation","cancelBubble","displayToast","console","log","setSequence","call","animationFinishedCallback","intervalId","setTimeout","maxHideTime","parseFloat","hideEta","Date","getTime","setInterval","updateProgress","animateToastIn","animateInPlayer","animate","opacity","duration","iterations","delay","onfinish","iconElement","innerContent","innerHTML","firstNode","firstChild","insertBefore","titleElement","mapMessage","messageElement","progressElement","shouldExit","override","clearTimeout","animateToastOut","percentage","style","width","extend","response","state","startTime","publish","getDefaultOptions","element","offsetWidth","offsetHeight","defaults","prop","extended","hasOwnProperty","window"],"mappings":"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","file":"toastr.js","sourcesContent":["/*\n * Toastr\n * Copyright 2012-2016\n * Authors: John Papa,  Tim Ferrell and Stephen Bero.\n * All Rights Reserved.\n * Use, reproduction, distribution, and modification of this code is subject to the terms and\n * conditions of the MIT license, available at http://www.opensource.org/licenses/mit-license.php\n *\n * ARIA Support: Greta Krafsig\n *\n * Project: https://github.com/CodeSeven/toastr\n */\n\n/* jshint -W040 */\nclass toastr {\n\n    constructor(options) {\n        this.container = null;\n        this.listener = null;\n        this.toastId = 0;\n        this.toastType = {\n            error: 'error',\n            info: 'info',\n            success: 'success',\n            warning: 'warning'\n        };\n        this.previousToast = undefined;\n        this.options = options;\n\n        return this;\n    }\n\n    /**\n     * Retrieves the container element.\n     * @param options\n     * @param {boolean} createContainer Whether or not to create a container if one does not already exist.\n     * @returns {Element}\n     */\n    getContainer(options, createContainer){\n\n        if (typeof(options) == 'undefined') {\n            options = this.getOptions();\n        }\n\n        this.container = document.getElementById(options.containerId);\n\n        if (this.container !== null) {\n            return this.container;\n        }\n\n        if (createContainer) {\n            this.container = this.createContainer(options);\n        }\n\n        return this.container;\n    }\n\n    /**\n     * Creates a toast with the 'error' styling.\n     * @param message {string}\n     * @param title {string}\n     * @param optionsOverride {object}\n     */\n    error(message, title, optionsOverride){\n        return this.notify({\n            type: this.toastType.error,\n            iconClass: this.getOptions().iconClasses.error,\n            message: message,\n            optionsOverride: optionsOverride,\n            title: title,\n        });\n    }\n\n    /**\n     * Creates a toast with the 'info' styling.\n     * @param message {string}\n     * @param title {string}\n     * @param optionsOverride {object}\n     */\n    info(message, title, optionsOverride) {\n        return this.notify({\n            type: this.toastType.info,\n            iconClass: this.getOptions().iconClasses.info,\n            message: message,\n            optionsOverride: optionsOverride,\n            title: title\n        });\n    }\n\n    /**\n     * Creates a toast with the 'success' styling.\n     * @param message {string}\n     * @param title {string}\n     * @param optionsOverride {object}\n     */\n    success(message, title, optionsOverride) {\n        return this.notify({\n            type: this.toastType.success,\n            iconClass: this.getOptions().iconClasses.success,\n            message: message,\n            optionsOverride: optionsOverride,\n            title: title\n        });\n    }\n\n    /**\n     * Creates a toast with the 'warning' styling.\n     * @param message {string}\n     * @param title {string}\n     * @param optionsOverride {object}\n     */\n    warning(message, title, optionsOverride) {\n        return this.notify({\n            type: this.toastType.warning,\n            iconClass: this.getOptions().iconClasses.warning,\n            message: message,\n            optionsOverride: optionsOverride,\n            title: title\n        });\n    }\n\n    /**\n     * Adds a listener to when a toast is shown.\n     * @param callback\n     */\n    subscribe(callback) {\n        this.listener = callback;\n    }\n\n    /**\n     * Clears the provided toast element from the screen, executing animations.\n     * @param {Element} toastElement\n     * @param clearOptions\n     */\n    clear(toastElement, clearOptions) {\n\n        var options = this.getOptions();\n\n        if (this.container === null) {\n            this.getContainer(options,false);\n        }\n\n        if (!this.clearToast(toastElement, options, clearOptions)) {\n            this.clearContainer(options);\n        }\n    }\n\n    /**\n     * Removes a toast from the screen, without executing animations.\n     * Good to go for v3.\n     * @param {Element} toastElement The toast to be removed.\n     */\n    remove(toastElement) {\n        let options = this.getOptions();\n\n        if (typeof(this.container) === 'undefined') {\n            this.getContainer(options, false);\n        }\n\n        if(typeof(toastElement) === 'undefined' && toastElement.matches(':focus')) {\n            this.removeToast(toastElement);\n            return;\n        }\n\n        if (!this.container.hasChildNodes()) {\n            this.container.remove();\n        }\n    }\n\n    /**\n     * Clears all toasts from the container.\n     * @param options\n     */\n    clearContainer (options) {\n        if(this.container){\n            let numToastsToClear = this.container.children.length;\n\n            for(var i = numToastsToClear - 1; i >= 0 ; --i){\n                var item = this.container.children[i];\n\n                this.clearToast(item, options);\n            }\n            // this.container.childNodes.forEach(item => this.clearToast(item, options, false));\n        }\n    }\n\n    /**\n     * Clears a toast.\n     * @private\n     * @param toastElement\n     * @param options\n     * @param clearOptions\n     * @returns {boolean}\n     */\n    clearToast (toastElement, options, clearOptions) {\n\n        if(typeof(toastElement) !== 'undefined'){\n            let forceToastClosure = clearOptions && clearOptions.force ? clearOptions.force : false;\n\n            if (forceToastClosure || !toastElement.matches(':focus')) {\n                this.removeToast(toastElement);\n\n                // TODO: Show exit animation and do callback etc\n                return true;\n            }\n        }\n\n        return false;\n    }\n\n    /**\n     * Removes a toast from the screen.\n     * @param toastElement\n     */\n    removeToast(toastElement) {\n\n        if (typeof(this.container) === 'undefined') {\n            this.container = this.getContainer();\n        }\n\n        if (this.isElementVisible(toastElement)) {\n            return;\n        }\n\n        // Use the element to get its parent so we can remove it.\n        toastElement.parentNode.removeChild(toastElement);\n\n        toastElement = null;\n\n        if (this.container.childNodes.length === 0 && this.container.parentNode) {\n            this.container.parentNode.removeChild(this.container);\n            this.previousToast = undefined;\n        }\n    }\n\n\n    /**\n     * Creates the toastr container.\n     * @private\n     * @param options\n     * @returns {Element}\n     * @see Updated for v3.\n     */\n    createContainer(options) {\n        this.container = document.createElement('div');\n        this.container.classList.add(options.positionClass);\n        this.container.setAttribute('id',options.containerId);\n        this.container.setAttribute('aria-live','polite');\n        this.container.setAttribute('role','alert');\n\n        document.querySelector(options.target).appendChild(this.container);\n\n        return this.container;\n    }\n\n    getDefaultOptions() {\n        return {\n            tapToDismiss: true,\n            toastClass: 'toast',\n            containerId: 'toast-container',\n            debug: false,\n\n            showMethod: 'fadeIn', //fadeIn, slideDown, and show are built into jQuery\n            showDuration: 300,\n            showEasing: 'swing', //swing and linear are built into jQuery\n            onShown: undefined,\n            hideMethod: 'fadeOut',\n            hideDuration: 1000,\n            hideEasing: 'swing',\n            onHidden: undefined,\n\n            extendedTimeOut: 1000,\n            iconClasses: {\n                error: 'toast-error',\n                info: 'toast-info',\n                success: 'toast-success',\n                warning: 'toast-warning'\n            },\n            iconClass: 'toast-info',\n            positionClass: 'toast-top-right',\n            timeOut: 1000, // Set timeOut and extendedTimeOut to 0 to make it sticky\n            titleClass: 'toast-title',\n            messageClass: 'toast-message',\n            target: 'body',\n            closeHtml: 'CLOSE',\n            newestOnTop: true,\n            preventDuplicates: false,\n            progressBar: false\n        };\n    }\n\n    /**\n     * Broadcast toast notification to the listener object.\n     * @param {object} args Arguments to provide to the listener callback.\n     */\n    publish(args) {\n\n        if (typeof(this.listener) === 'undefined' || this.listener === null) {\n            return;\n        }\n\n        this.listener(args);\n    }\n\n    /**\n     * Core method for generating toasts.\n     * @param map\n     * @returns {Element}\n     */\n    notify(map) {\n        let options = this.getOptions();\n        let iconClass = map.iconClass || options.iconClass;\n\n        if (typeof (map.optionsOverride) !== 'undefined') {\n            options = this.extend(options, map.optionsOverride);\n            iconClass = map.optionsOverride.iconClass || iconClass;\n        }\n\n        if (shouldExit.call(this, options, map)) {\n            return;\n        }\n\n        this.toastId++;\n        let container = this.getContainer(options, true);\n\n        var intervalId = null;\n        let toastElement = document.createElement('div');\n        toastElement.classList.add(iconClass);\n\n        let titleElement = document.createElement('div');\n\n        /**\n         *\n         * @type {Element}\n         */\n        let messageElement = document.createElement('div');\n\t    let iconElement = document.createElement('div');\n        let progressElement = document.createElement('div');\n        let closeElement = document.createElement('div');\n            closeElement.innerHTML = options.closeHtml;\n        let message = map.message;\n        let title = map.title;\n\n        var progressBar = {\n            intervalId: null,\n            hideEta: null,\n            maxHideTime: null\n        };\n        var response = {\n            toastId: this.toastId,\n            state: 'visible',\n            startTime: new Date(),\n            options: options,\n            map: map\n        };\n\n        personalizeToast.call(this);\n\n        displayToast.call(this);\n\n        handleEvents();\n\n        this.publish(response);\n\n        if (options.debug && console) {\n            console.log(response);\n        }\n\n        return toastElement;\n\n        function personalizeToast() {\n            setIcon(iconClass);\n            setTitle(title);\n            setMessage(message);\n            setCloseButton(closeElement);\n            setProgressBar();\n        }\n\n        function handleEvents() {\n\n            toastElement.addEventListener('mouseover', stickAround);\n            toastElement.addEventListener('mouseout', delayedHideToast);\n\n            if (!options.onclick && options.tapToDismiss) {\n                toastElement.click(hideToast);\n            }\n\n            if (options.closeButton && closeElement) {\n                closeElement.click(function (event) {\n                    if (event.stopPropagation) {\n                        event.stopPropagation();\n                    } else if (event.cancelBubble !== undefined && event.cancelBubble !== true) {\n                        event.cancelBubble = true;\n                    }\n                    hideToast(true);\n                });\n            }\n\n            if (options.onclick) {\n                toastElement.click(function () {\n                    options.onclick(); // TODO remove jQuery\n                    hideToast();\n                });\n            }\n        }\n\n        /**\n         * Pushes the current toast out for display.\n         */\n        function displayToast() {\n\n            console.log(\"Appending toast to container.\", toastElement);\n\n            // container.appendChild(toastElement);\n            setSequence.call(this);\n\n            if(typeof(options.onShown) === 'function'){\n                options.onShown();\n            }\n\n            let animationFinishedCallback = function (args) {\n\n                console.log('Toast animation in completed.', args);\n\n                if (options.timeOut > 0) {\n                    intervalId = setTimeout(hideToast, options.timeOut);\n                    progressBar.maxHideTime = parseFloat(options.timeOut);\n                    progressBar.hideEta = new Date().getTime() + progressBar.maxHideTime;\n                    if (options.progressBar) {\n                        progressBar.intervalId = setInterval(updateProgress, 10);\n                    }\n                }\n            };\n\n            animateToastIn(toastElement, animationFinishedCallback);\n\n        }\n\n        /**\n         * Defines the animation for animating toasts onto the document.\n         * @param {Element} toastElement The element to be animated in.\n         * @param {Function} animationFinishedCallback The function to be executed when the animation is completed.\n         */\n        function animateToastIn(toastElement, animationFinishedCallback) {\n            let animateInPlayer = toastElement.animate([\n                {opacity: 0},\n                {opacity: 1}\n            ], {\n                duration: options.showDuration,\n                iterations: 1,\n                delay: 0\n            });\n            animateInPlayer.onfinish = animationFinishedCallback;\n        }\n\n\n        /**\n         * Adds a class to set the icon for the toast.\n         * Good to go for v3.\n         */\n        function setIcon(iconClass) {\n            if (typeof(options.iconClass)!=='undefined') {\n            \ticonElement.classList.add('toast-icon');\n                let innerContent = \"\";\n                switch(iconClass) {\n                    case  \"toast-info\":\n                        innerContent = \"<i class='fa fa-info-circle'></i>\";\n                        break;\n                    case \"toast-warn\":\n                        innerContent = \"<i class='fa fa-exclamation-triangle'></i>\";\n                        break;\n                    case \"toast-error\":\n                        innerContent = \"<i class='fa fa-exclamation-circle'></i>\";\n                        break;\n                    case \"toast-success\":\n                        innerContent = \"<i class='fa fa-check'></i>\";\n                        break;\n                }\n                iconElement.innerHTML = innerContent;\n            \ttoastElement.appendChild(iconElement);\n                toastElement.classList.add(options.toastClass);\n            }\n        }\n\n        function setSequence() {\n            let container = this.getContainer();\n\n            if (options.newestOnTop) {\n                var firstNode = container.firstChild;\n\n                container.insertBefore(toastElement, firstNode);\n\n                // console.log(this.container);\n                // TODO: Not yet supported in v3\n            } else {\n                container.appendChild(toastElement); // TODO: JSHint Possible String Violation\n            }\n\n            this.container = container;\n        }\n\n        /**\n         * Good to go for v3.\n         */\n        function setTitle(title) {\n            if (typeof(title) !== 'undefined') {\n                titleElement.innerHTML = title;\n                titleElement.classList.add(options.titleClass);\n                toastElement.appendChild(titleElement);\n            }\n        }\n\n        /**\n         * Good to go for v3.\n         */\n        function setMessage(message) {\n            console.log(\"message recv as\", message);\n            if (typeof(message) !== 'undefined') {\n\n                let mapMessage = document.createElement('div');\n                mapMessage.innerHTML = message;\n\n                messageElement.appendChild(mapMessage);\n                messageElement.classList.add(options.messageClass);\n\n                toastElement.appendChild(messageElement);\n            }\n        }\n\n        function setCloseButton(closeElement) {\n            console.log(closeElement);\n            if (typeof(closeElement) !== 'undefined') {\n                closeElement.classList.add('toast-close-button');\n                closeElement.setAttribute('role','button');\n                closeElement.setAttribute('type','button');\n                toastElement.appendChild(closeElement);\n            }\n        }\n\n        function setProgressBar() {\n            if (typeof(options.progressBar) !== 'undefined' && options.progressBar) {\n                progressElement.classList.add('toast-progress');\n                toastElement.appendChild(progressElement);\n            }\n        }\n\n        function shouldExit(options, map) {\n            if (options.preventDuplicates) {\n                // if (typeof(this) !== 'undefined') {\n\n                    if(map.message === this.previousToast){\n                            return true;\n                    }else {\n                        this.previousToast = map.message; // TODO: JSHint Possible String Violation\n                    }\n                // }\n            }\n\n            return false;\n        }\n\n        function hideToast(override) {\n            if (toastElement.matches(':focus') && !override) {\n                return;\n            }\n\n            clearTimeout(progressBar.intervalId);\n\n            console.log(\"Hiding toast now.\", toastElement);\n\n            let removeFunction = this.removeToast; // TODO: JSHint Possible String Violation\n\n            if(typeof(options.onHidden) === 'function'){\n                options.onHidden();\n            }\n\n            let animationFinishedCallback = function(args) {\n                console.log(\"Toast is now hiding.\", args);\n\n                let parentNode = toastElement.parentNode;\n\n                // Repeating myself. Try to find a way to not duplicate code.\n                // Use the element to get it's parent so we can remove it.\n                if(parentNode !== null){\n                    parentNode.removeChild(toastElement);\n\n                    if (!parentNode.hasChildNodes()) {\n                        container.parentNode.removeChild(container);\n                        this.previousToast = undefined;\n                    }\n                }\n\n                toastElement = null;\n            };\n\n            animateToastOut(toastElement,animationFinishedCallback);\n\n        }\n\n        /**\n         * Defines the animation for animating toasts off of the document.\n         * @param {Element} toastElement The element to be animated out.\n         * @param {Function} animationFinishedCallback The function to be executed when the animation is completed.\n         */\n        function animateToastOut(toastElement, animationFinishedCallback) {\n            let animateInPlayer = toastElement.animate([\n                {opacity: 1},\n                {opacity: 0}\n            ], {\n                duration: options.hideDuration,\n                iterations: 1,\n                delay: 0\n            });\n            animateInPlayer.onfinish = animationFinishedCallback;\n        }\n\n\n        function delayedHideToast() {\n            if (options.timeOut > 0 || options.extendedTimeOut > 0) {\n                intervalId = setTimeout(hideToast, options.extendedTimeOut);\n                progressBar.maxHideTime = parseFloat(options.extendedTimeOut);\n                progressBar.hideEta = new Date().getTime() + progressBar.maxHideTime;\n            }\n        }\n\n        function stickAround() {\n            clearTimeout(intervalId);\n            progressBar.hideEta = 0;\n            // toastElement.stop(true, true)[options.showMethod]( // TODO Remove jQuery\n                // {duration: options.showDuration, easing: options.showEasing}\n            // );\n        }\n\n        function updateProgress() {\n            var percentage = ((progressBar.hideEta - (new Date().getTime())) / progressBar.maxHideTime) * 100;\n            progressElement.style.width = percentage + '%';\n        }\n    }\n\n    /**\n     * Gets the current options for toastr.\n     * Includes defaults where not overriden.\n     * @private\n     * @returns {Object}\n     */\n    getOptions() {\n        return this.extend(this.getDefaultOptions(), this.options);\n    }\n\n    /**\n     * Checks if the provided element is visible on screen.\n     * @private\n     * @param element\n     * @returns {boolean}\n     */\n    isElementVisible(element) {\n        return element.offsetWidth > 0 && element.offsetHeight > 0; // TODO this doesn't work\n    }\n\n    /**\n     * Merge defaults with user options\n     * @param {Object} defaults Default settings\n     * @param {Object} options User options\n     * @returns {Object} Merged values of defaults and options\n     * @see http://gomakethings.com/vanilla-javascript-version-of-jquery-extend/\n     */\n     extend ( defaults, options ) {\n        var extended = {};\n        var prop;\n        for (prop in defaults) {\n            if (Object.prototype.hasOwnProperty.call(defaults, prop)) {\n                extended[prop] = defaults[prop];\n            }\n        }\n        for (prop in options) {\n            if (Object.prototype.hasOwnProperty.call(options, prop)) {\n                extended[prop] = options[prop];\n            }\n        }\n        return extended;\n    }\n}\n\n// This makes toastr an export for closure's sake\nif(typeof(window) !== 'undefined'){\n    window.toastr = toastr;\n}\n"],"sourceRoot":"/source/"}